#!/usr/bin/env groovy
/*
 * Compile dependencies for gradle-base-plugins
 * Copyright Â© 2017-2018  Basil Peace
 *
 * This file is part of gradle-base-plugins.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */
import org.fidata.gradle.utils.PluginDependee
import org.fidata.gradle.utils.PluginDependeeExclusion

apply from: new File(ext.rootDir, 'gradle/dependencies-dependencyUtils-compile.gradle')

dependencies {
  exceptionsImplementation/*exceptionsApi*/ localGroovy()
  implementation sourceSets.exceptions.output

  Closure addDependencies = { Map<String, PluginDependee> pluginDependees ->
    pluginDependees.findAll { !it.key.startsWith('org.gradle.') }.each { Map.Entry<String, PluginDependee> entry ->
      entry.value.with {
        Dependency dependency = add(
          configurationName, [
            group  : group ?: entry.key,
            name   : module ?: "${ entry.key }.gradle.plugin",
            version: version
          ]
        ) { ExternalModuleDependency dependency ->
          excludes?.each { PluginDependeeExclusion exclusion ->
            dependency.exclude(
              group: exclusion.group,
              module: exclusion.module
            )
          }
        }
        if (status) {
          dependency.status = status
        }
      }
    }
  }

  addDependencies org.fidata.gradle.ProjectPluginDependees.PLUGIN_DEPENDEES
  addDependencies org.fidata.gradle.JvmBasePluginDependees.PLUGIN_DEPENDEES
  addDependencies org.fidata.gradle.JavaProjectPluginDependees.PLUGIN_DEPENDEES
  addDependencies org.fidata.gradle.GroovyBaseProjectPluginDependees.PLUGIN_DEPENDEES
  addDependencies org.fidata.gradle.GradlePluginPluginDependees.PLUGIN_DEPENDEES

  api(group: 'org.spdx', name: 'spdx-tools', version: '[2.1.15, 3[') {
    exclude(group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl')
    exclude(group: 'org.apache.logging.log4j', module: 'log4j-core')
  }

  /*
   * CAVEAT:
   * Gradle doesn't handle dependencyManagement (BOM) strictly.
   * See https://github.com/gradle/gradle/issues/4979
   * So, we have to use direct dependency instead of constraints
   */
  implementation(group: 'xerces', name: 'xercesImpl', version: '[2.12.0, 3[')

  /*
   * WORKAROUND:
   * org.apache.maven:maven-ant-tasks has old plexus dependency which have undesired JUnit dependency
   * <grv87 2018-06-24>
   */
  implementation(group: 'org.codehaus.plexus', name: 'plexus-container-default', version: '[1, 2[') {
    /*
     * WORKAROUND:
     * org.codehaus.plexus:plexus-container-default still has google-collections dependency
     * which is superseded by Guava
     * <grv87 2018-06-24>
     */
    exclude group: 'com.google.collections', module: 'google-collections'
  }

  implementation(group: 'net.java.dev.jna', name: 'jna-platform', version: '[4, 5[')
  // implementation(group: 'org.apache.commons', name: 'commons-lang3', version: '[3, 4[')
}
configurations.named('implementation').configure { exclude(group: 'org.slf4j', module: 'slf4j-api') }
